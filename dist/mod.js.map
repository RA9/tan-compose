{
  "version": 3,
  "sources": ["../describe.ts", "../build.ts"],
  "sourcesContent": ["import { DescribeOptions } from './types.ts';\n\n\nexport function describe(options: DescribeOptions) {\n  return {\n    ...options,\n  };\n}\n", "import { DescribeOptions } from './types.ts';\n\n// Define the build function with type annotations\nexport function build(tagName: string, description: DescribeOptions): void {\n  class CustomComponent extends HTMLElement {\n      constructor() {\n          super();\n\n          // Initialize Shadow DOM for component encapsulation\n          const shadow = this.attachShadow({ mode: 'open' });\n\n          // Theme setup using CSS Variables\n          if (description.theme) {\n              const themeStyle = document.createElement('style');\n              let cssVariables = ':host {';\n              Object.entries(description.theme).forEach(([key, value]) => {\n                  cssVariables += `--${key}: ${value}; `;\n              });\n              cssVariables += '}';\n              themeStyle.textContent = cssVariables;\n              shadow.appendChild(themeStyle);\n          }\n\n          // Apply styles inline\n          if (description.styles) {\n              const styleString = Object.entries(description.styles)\n                  .map(([key, value]) => `${key}: ${value}`)\n                  .join(\"; \");\n              this.style.cssText = styleString;\n          }\n\n          // Set class if available\n          if (description.className) {\n              this.className = description.className;\n          }\n\n          // Set attributes if any\n          if (description.attributes) {\n              setAttributes(this, description.attributes);\n          }\n\n          // Create child elements recursively\n          if (description.children && description.children.length > 0) {\n              description.children.forEach(childDesc => {\n                  const childElement = document.createElement(childDesc.tag || 'div');\n                  build(childDesc.tag as string, childDesc); // Recursively build child components\n                  shadow.appendChild(childElement);\n              });\n          }\n\n          // Setup event emission\n          if (description.emit) {\n              description.emit.forEach(event => {\n                  this.addEventListener(event.name, event.handler);\n              });\n          }\n      }\n\n      connectedCallback() {\n          if (description.afterMount) {\n              description.afterMount();\n          }\n\n          // Handle click or other event action if provided\n          if (description.action) {\n              this.addEventListener('click', description.action);\n          }\n\n          // Slot content for custom component content\n          const slotContent = document.createElement('slot');\n          this.shadowRoot!.appendChild(slotContent);\n      }\n\n      disconnectedCallback() {\n          if (description.action) {\n              this.removeEventListener('click', description.action);\n          }\n      }\n\n      // Custom event emitter method\n      emitEvent(eventName: string, data: any) {\n          const event = new CustomEvent(eventName, {\n              detail: data,\n              bubbles: true,\n              composed: true\n          });\n          this.dispatchEvent(event);\n      }\n  }\n\n  // Define the custom element in the DOM\n  customElements.define(tagName, CustomComponent);\n}\n\n// Helper function to set attributes on elements\nfunction setAttributes(element: HTMLElement, attributes: Record<string, string>): void {\n  Object.keys(attributes).forEach(attr => {\n      element.setAttribute(attr, attributes[attr]);\n  });\n}\n"],
  "mappings": "AAGO,SAASA,EAASC,EAA0B,CACjD,MAAO,CACL,GAAGA,CACL,CACF,CCJO,SAASC,EAAMC,EAAiBC,EAAoC,CACzE,MAAMC,UAAwB,WAAY,CACtC,aAAc,CACV,MAAM,EAGN,IAAMC,EAAS,KAAK,aAAa,CAAE,KAAM,MAAO,CAAC,EAGjD,GAAIF,EAAY,MAAO,CACnB,IAAMG,EAAa,SAAS,cAAc,OAAO,EAC7CC,EAAe,UACnB,OAAO,QAAQJ,EAAY,KAAK,EAAE,QAAQ,CAAC,CAACK,EAAKC,CAAK,IAAM,CACxDF,GAAgB,KAAKC,CAAG,KAAKC,CAAK,IACtC,CAAC,EACDF,GAAgB,IAChBD,EAAW,YAAcC,EACzBF,EAAO,YAAYC,CAAU,CACjC,CAGA,GAAIH,EAAY,OAAQ,CACpB,IAAMO,EAAc,OAAO,QAAQP,EAAY,MAAM,EAChD,IAAI,CAAC,CAACK,EAAKC,CAAK,IAAM,GAAGD,CAAG,KAAKC,CAAK,EAAE,EACxC,KAAK,IAAI,EACd,KAAK,MAAM,QAAUC,CACzB,CAGIP,EAAY,YACZ,KAAK,UAAYA,EAAY,WAI7BA,EAAY,YACZQ,EAAc,KAAMR,EAAY,UAAU,EAI1CA,EAAY,UAAYA,EAAY,SAAS,OAAS,GACtDA,EAAY,SAAS,QAAQS,GAAa,CACtC,IAAMC,EAAe,SAAS,cAAcD,EAAU,KAAO,KAAK,EAClEX,EAAMW,EAAU,IAAeA,CAAS,EACxCP,EAAO,YAAYQ,CAAY,CACnC,CAAC,EAIDV,EAAY,MACZA,EAAY,KAAK,QAAQW,GAAS,CAC9B,KAAK,iBAAiBA,EAAM,KAAMA,EAAM,OAAO,CACnD,CAAC,CAET,CAEA,mBAAoB,CACZX,EAAY,YACZA,EAAY,WAAW,EAIvBA,EAAY,QACZ,KAAK,iBAAiB,QAASA,EAAY,MAAM,EAIrD,IAAMY,EAAc,SAAS,cAAc,MAAM,EACjD,KAAK,WAAY,YAAYA,CAAW,CAC5C,CAEA,sBAAuB,CACfZ,EAAY,QACZ,KAAK,oBAAoB,QAASA,EAAY,MAAM,CAE5D,CAGA,UAAUa,EAAmBC,EAAW,CACpC,IAAMH,EAAQ,IAAI,YAAYE,EAAW,CACrC,OAAQC,EACR,QAAS,GACT,SAAU,EACd,CAAC,EACD,KAAK,cAAcH,CAAK,CAC5B,CACJ,CAGA,eAAe,OAAOZ,EAASE,CAAe,CAChD,CAGA,SAASO,EAAcO,EAAsBC,EAA0C,CACrF,OAAO,KAAKA,CAAU,EAAE,QAAQC,GAAQ,CACpCF,EAAQ,aAAaE,EAAMD,EAAWC,CAAI,CAAC,CAC/C,CAAC,CACH",
  "names": ["describe", "options", "build", "tagName", "description", "CustomComponent", "shadow", "themeStyle", "cssVariables", "key", "value", "styleString", "setAttributes", "childDesc", "childElement", "event", "slotContent", "eventName", "data", "element", "attributes", "attr"]
}
